import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';

import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';
import { ThemeProvider } from '@mui/material/styles';
import theme from './theme';
import { ToastContainer } from 'react-toastify';
import ReduxProvider from '@/libs/redux/provider';
import ReactQueryProvider from '@/libs/tanstack/provider';
import { SocketProvider } from '@/libs/context/socket.context';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AppRouterCacheProvider>
          <ReduxProvider>
            <SocketProvider>
              <ThemeProvider theme={theme}>
                <ReactQueryProvider>{children}</ReactQueryProvider>
                <ToastContainer />
              </ThemeProvider>
            </SocketProvider>
          </ReduxProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
